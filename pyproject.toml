[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tinybox"
description = ''
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [
  { name = "Alex Claydon", email = "alexclaydon@gmail.com" },
  { name = "Liam Gilchrist", email = "liamgilchrist@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "gunicorn",
  "psycopg2-binary",
  "dj-database-url",
  "typer[all]",
  "python-dotenv>=1.0.0",
  "python-dateutil>=2.8.2",
  "requests>=2.28.2",
  "Django==4.2",
  # "psycopg2>=2.9.6",
  "django-tailwind>=3.5.0",
  "geojson>=3.0.1",
  "pandas>=2.0.0",
  "Pillow>=9.5.0",
  "beautifulsoup4>=4.12.1",
  "dagster>=1.2.6",
  "dagit>=1.2.6",
  "pydantic>=1.10.7",
  "datamodel-code-generator>=0.17.2",
  "boto3",
  "django-storages",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = ["black", "isort", "pip-tools", "pytest", "pytest-cov"]

[project.urls]
Documentation = "https://github.com/alexclaydon/tinybox#readme"
Issues = "https://github.com/alexclaydon/tinybox/issues"
Source = "https://github.com/alexclaydon/tinybox"

[tool.hatch.version]
path = "src/tinybox/__about__.py"

[tool.hatch.envs.default]
python = "3.9"
type = "virtual"
dependencies = []
features = ["dev"]

[tool.hatch.envs.default.env-vars]
PIP_FIND_LINKS = "https://github.com/dagster-io/build-grpcio/wiki/Wheels"
PIP_VERBOSE = "2"
DAGSTER_HOME = "/Users/alexclaydon/dev/dev-projects/tinybox/tools/etl/data"
MallocNanoZone = "1"

[tool.hatch.envs.default.scripts]
# Tests
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=src/tinybox --cov=tests {args}"
no-cov = "cov --no-cov {args}"
# ETL pipeline
etl = "dagster dev"
# Web app
webstatic = "python tools/web/manage.py collectstatic -c --noinput"
webdev = "(trap 'kill 0' SIGINT; python tools/web/manage.py tailwind start & python tools/web/manage.py runserver 0.0.0.0:8080)"
webdev-srv = "python tools/web/manage.py runserver"
# For use when you want to run the Django dev server on its own, or when you want to run it in a separate process to Tailwind hot reload for troubleshooting purposes
webdev-tailwind = "python tools/web/manage.py tailwind start"
# For use when you want to run Tailwind hot reload on its own, or when you want to run it in a separate process to the Django dev server for troubleshooting purposes
webngrok = "./bin/ngrok http 8080 --domain=tinybox.ngrok.dev --oauth google --oauth-allow-email mattielangton@gmail.com --oauth-allow-email alexclaydon@gmail.com --oauth-allow-email liamgilchrist@gmail.com"
webmakemigrate = "python tools/web/manage.py makemigrations"
webmigrate = "python tools/web/manage.py migrate"
webshell = "python tools/web/manage.py shell"

[[tool.hatch.envs.test.matrix]]
python = ["3.9"]

[tool.dagster]
module_name = "tools.etl.general"
# Add each new pipeline module to this list

[tool.coverage.run]
branch = true
parallel = true
omit = ["src/tinybox/__about__.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.black]
line-length = 71

[tool.ruff]
# Never enforce `E501` (line length violations).
ignore = ["E501"]
